---
import allProjects from "@src/allProjects";

interface Props {
  stackItems: {
    displayName: string;
    keyName: string;
  }[];
}

const flattenedPersonalProjects = Object.keys(allProjects.personal).map(
    (key) => [
      `projects/personal/${key}`,
      allProjects.personal[key].title,
      allProjects.personal[key].techStack,
    ]
  ),
  flattenedCloneProjects = Object.keys(allProjects.clones).map((key) => [
    `projects/clones/${key}`,
    allProjects.clones[key].title,
    allProjects.clones[key].techStack,
  ]),
  flattenedProjects = flattenedPersonalProjects.concat(flattenedCloneProjects),
  { stackItems } = Astro.props;
---

<section class="flex flex-col md:flex-row gap-4">
  {
    stackItems.map(({ keyName, displayName }, i) => {
      const itemProjects = flattenedProjects.filter((project) =>
        project[2].includes(keyName)
      );
      return (
        <ul
          class={`${!!i && "md:border-l-2 border-neutral-200 md:pl-6 overflow-hidden"} min-w-[190px]`}
        >
          <p class="font-semibold">{displayName}</p>
          {itemProjects.map((project) => {
            const [link, title] = project as string[];
            return (
              <li class="list-disc ml-5 hover:underline underline-offset-2">
                <a class="italic" href={link}>
                  {title}
                </a>
              </li>
            );
          })}
        </ul>
      );
    })
  }
</section>
