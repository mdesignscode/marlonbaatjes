---
import allProjects from "@src/allProjects.js";
import RootLayout from "@layouts/RootLayout.astro";
import Projects from "@components/Projects.astro";
---

<RootLayout title="Projects">
  <div class="space-y-4">
    <h1
      class="font-bold text-2xl sm:text-3xl md:text-4xl pb-2 border-b-2 border-neutral-200 opacity-0 slideInDown"
    >
      My Projects
    </h1>

    <div class="space-y-8 projects">
      <Projects
        projects={allProjects.personal}
        key="personal"
        title="Personal projects"
      />

      <Projects
        projects={allProjects.clones}
        key="clones"
        title="Clone projects"
      />
    </div>
  </div>
</RootLayout>

<script>
  // Define a custom interface for Intersection Observer Options
  interface IntersectionObserverOptions {
    root?: Element | null;
    rootMargin?: string;
    threshold?: number | number[];
  }

  // Callback function to be executed when the observed elements intersect
  const callback: IntersectionObserverCallback = (entries, observer) => {
    entries.forEach((entry, i) => {
      const className = window.innerWidth < 768 ? "slideInLeft" : "slideInUp";

      if (entry.isIntersecting) {
        if (entry.target instanceof HTMLElement) {
          entry.target.style.animationDelay = `${i * 0.25}s`;
        }
        entry.target.classList.add(className);
        observer.unobserve(entry.target);
      } else {
        entry.target.classList.remove(className);
      }
    });
  };

  // Get all elements with class 'box'
  const boxes: NodeListOf<Element> = document.querySelectorAll(".project-card");

  // Options for the IntersectionObserver
  const options: IntersectionObserverOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.5, // When 50% of the element is visible
  };

  // Create a new IntersectionObserver with the callback and options
  const observer: IntersectionObserver = new IntersectionObserver(
    callback,
    options
  );

  // Loop through each box and observe it
  boxes.forEach((box) => {
    observer.observe(box);
  });
</script>
